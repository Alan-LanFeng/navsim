_target_: nuplan.planning.scenario_builder.scenario_filter.ScenarioFilter
_convert_: 'all'

scenario_types: null                # List of scenario types to include
scenario_tokens:
  - '2f0fabf57d3656f0'
  - '75e9560bbf695296'
  - '98bb7dfacecb5933'
  - '581d2a58b117586b'
  - '51118f44815f5577'
  - '0cc5b1ed009d5507'
  - '0d17d127a68450f0'
  - '2a8a63ddfba45521'
  - '3d8212b8a54254c1'
  - '4f83dfc352c85154'
  - '8c52d43af52a5422'
  - '8d40ee4d17095e43'
  - '2fd01e7080d2515f'
  - '4cef31e7e4805150'
  - '4fed3d20ccf95d25'
  - '75ac792a0cee539f'
  - '69997fa6cc075106'

log_names: null # Filter scenarios by log names
map_names: null                     # Filter scenarios by map names

num_scenarios_per_type: null        # Number of scenarios per type
limit_total_scenarios: null         # Limit total scenarios (float = fraction, int = num) - this filter can be applied on top of num_scenarios_per_type
timestamp_threshold_s: null         # Filter scenarios to ensure scenarios have more than `timestamp_threshold_s` seconds between their initial lidar timestamps
ego_displacement_minimum_m: null    # Whether to remove scenarios where the ego moves less than a certain amount
ego_start_speed_threshold: null     # Limit to scenarios where the ego reaches a certain speed from below
ego_stop_speed_threshold: null      # Limit to scenarios where the ego reaches a certain speed from above
speed_noise_tolerance: null         # Value at or below which a speed change between two timepoints should be ignored as noise.

expand_scenarios: false              # Whether to expand multi-sample scenarios to multiple single-sample scenarios
remove_invalid_goals: false          # Whether to remove scenarios where the mission goal is invalid
shuffle: false
